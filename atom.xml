<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Clark&#39;s Mill</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chihungtzeng.github.io/"/>
  <updated>2019-11-03T09:26:55.376Z</updated>
  <id>https://chihungtzeng.github.io/</id>
  
  <author>
    <name>Clark</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gcc tips and tricks</title>
    <link href="https://chihungtzeng.github.io/2019/11/03/gcc-tips-and-tricks/"/>
    <id>https://chihungtzeng.github.io/2019/11/03/gcc-tips-and-tricks/</id>
    <published>2019-11-03T03:17:32.000Z</published>
    <updated>2019-11-03T09:26:55.376Z</updated>
    
    <content type="html"><![CDATA[<p>Here are the tips and tricks that I collected along the way during my years as a software engineer. Many tricks work in g++, too.  Some of them might be out of date now.  I keep them short in order to give an overview about the toolchain so that people can use google their howto/tutorials.</p><h3 id="Show-default-compiler-options"><a href="#Show-default-compiler-options" class="headerlink" title="Show default compiler options"></a>Show default compiler options</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ gcc -dM -E - &lt; /dev/null</span><br><span class="line">#define __SSP_STRONG__ 3</span><br><span class="line">#define __DBL_MIN_EXP__ (-1021)</span><br><span class="line">#define __FLT32X_MAX_EXP__ 1024</span><br><span class="line">#define __UINT_LEAST16_MAX__ 0xffff</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="static-stack-usage-analysis"><a href="#static-stack-usage-analysis" class="headerlink" title="static stack usage analysis"></a>static stack usage analysis</h3><p>Pass -fstack-usage to gcc.</p><p>Related:</p><ul><li>-fcallgraph-info</li><li>-fdump-tree-optimized</li><li>scripts/checkstack.pl in Linux kernel source.</li></ul><h3 id="gcc-function-trace"><a href="#gcc-function-trace" class="headerlink" title="gcc function trace"></a>gcc function trace</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gcc -finstrument-functions foo.c</span><br></pre></td></tr></table></figure><p>The above command inserts <code>__cyg_profile_func_enter()</code> and <code>__cyg_profile_func_exit()</code> before and after a function call.<br>To disable it for certain functions, try:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> __attribute__((__no_instrument_function__)) __cyg_profile_func_enter(<span class="keyword">void</span> *this_func, <span class="keyword">void</span> *caller)</span><br></pre></td></tr></table></figure><h3 id="dump-machine"><a href="#dump-machine" class="headerlink" title="dump machine"></a>dump machine</h3><p>Useful when you are working on cross-compiling.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ g++ -dumpmachine</span><br><span class="line">x86_64-pc-linux-gnu</span><br></pre></td></tr></table></figure><h3 id="weak-strong-reference"><a href="#weak-strong-reference" class="headerlink" title="weak/strong reference"></a>weak/strong reference</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__attribute__((weak))</span><br><span class="line">__attribute__((weakref)) void foo();</span><br></pre></td></tr></table></figure><p>If foo() is not defined, its address is 0.</p><h3 id="Turn-a-into-so"><a href="#Turn-a-into-so" class="headerlink" title="Turn .a into .so"></a>Turn .a into .so</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -shared -o output.so libfoo.a</span><br></pre></td></tr></table></figure><h3 id="Check-unsafe-code"><a href="#Check-unsafe-code" class="headerlink" title="Check unsafe code"></a>Check unsafe code</h3><h4 id="Sanitizer"><a href="#Sanitizer" class="headerlink" title="Sanitizer"></a>Sanitizer</h4><p>There are three major kinds of sanitizers: address, thread and undefined. This field is under heavy development and more sanitizers might come. I personally use it with -g options to show full stack trace.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gcc -fsanitize=address</span><br><span class="line">gcc -fsanitize=thread</span><br><span class="line">gcc -fsanitize=undefined</span><br><span class="line"></span><br><span class="line"># Other variants</span><br><span class="line">gcc -fsanitize=kernel-address</span><br><span class="line">gcc -fsanitize=leak</span><br></pre></td></tr></table></figure><h4 id="stack-protector"><a href="#stack-protector" class="headerlink" title="stack protector"></a>stack protector</h4><p>Replace unsafe calls like gets()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fstack-protector -D_FORTIFY_SOURCE</span><br></pre></td></tr></table></figure><h4 id="32-bit-addition-overflow"><a href="#32-bit-addition-overflow" class="headerlink" title="32-bit addition overflow"></a>32-bit addition overflow</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -ftrapv</span><br></pre></td></tr></table></figure><h4 id="Mudflap-Pointer-Debugging-gcc-lt-4-9"><a href="#Mudflap-Pointer-Debugging-gcc-lt-4-9" class="headerlink" title="Mudflap Pointer Debugging (gcc &lt; 4.9)"></a>Mudflap Pointer Debugging (gcc &lt; 4.9)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fmudflap -lmudflap</span><br></pre></td></tr></table></figure><p>Use MUDFLAP_OPTIONS to do run time checking.</p><h3 id="list-header-inclusion"><a href="#list-header-inclusion" class="headerlink" title="list header inclusion"></a>list header inclusion</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ cat foo.c</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ gcc -H foo.c</span><br><span class="line">. /usr/include/stdio.h</span><br><span class="line">.. /usr/include/bits/libc-header-start.h</span><br><span class="line">... /usr/include/features.h</span><br><span class="line">.... /usr/include/sys/cdefs.h</span><br><span class="line">..... /usr/include/bits/wordsize.h</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="Show-compile-time"><a href="#Show-compile-time" class="headerlink" title="Show compile time"></a>Show compile time</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ gcc -ftime-report foo.c</span><br><span class="line"></span><br><span class="line">Time variable                                   usr           sys          wall               GGC</span><br><span class="line"> phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)    1243 kB ( 71%)</span><br><span class="line"> phase parsing                      :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)     436 kB ( 25%)</span><br><span class="line"> preprocessing                      :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)     127 kB (  7%)</span><br><span class="line"> TOTAL                              :   0.00          0.00          0.01           1744 kB</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Here are the tips and tricks that I collected along the way during my years as a software
        
      
    
    </summary>
    
    
      <category term="tooling" scheme="https://chihungtzeng.github.io/categories/tooling/"/>
    
    
      <category term="gcc" scheme="https://chihungtzeng.github.io/tags/gcc/"/>
    
      <category term="g++" scheme="https://chihungtzeng.github.io/tags/g/"/>
    
  </entry>
  
  <entry>
    <title>My .screenrc</title>
    <link href="https://chihungtzeng.github.io/2019/11/02/My-screenrc/"/>
    <id>https://chihungtzeng.github.io/2019/11/02/My-screenrc/</id>
    <published>2019-11-02T01:17:41.000Z</published>
    <updated>2019-11-03T02:34:01.913Z</updated>
    
    <content type="html"><![CDATA[<p>Save the following as ~/.screenrc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># ctrl+a q unblock scrolling</span><br><span class="line">altscreen on # erase screen when quit apps</span><br><span class="line">defutf8 on</span><br><span class="line">defc1 off # treat input chars 128 ~ 159 as control functions</span><br><span class="line">defflow on</span><br><span class="line">activity &quot;activity in %n (%t)&quot;</span><br><span class="line">bell_msg &quot;bell in %n (%t)&quot;</span><br><span class="line">vbell on</span><br><span class="line">startup_message off</span><br><span class="line">nethack on</span><br><span class="line">shell $SHELL</span><br><span class="line">defscrollback 10000</span><br><span class="line"></span><br><span class="line"># using Ctrl+Left &amp; Ctrl+Right</span><br><span class="line">bindkey ^[[1;5D prev</span><br><span class="line">bindkey ^[[1;5C next</span><br><span class="line">bindkey \033[D prev</span><br><span class="line">bindkey \033[C next</span><br><span class="line"></span><br><span class="line"># encoding</span><br><span class="line">defencoding utf8</span><br><span class="line">bind b encoding big5 utf8</span><br><span class="line">bind u encoding utf8 utf8</span><br><span class="line">defbce on # erase background with current bg color</span><br><span class="line">cjkwidth off</span><br><span class="line">caption always &quot;%n(%t)&quot;</span><br><span class="line"></span><br><span class="line">screen -t coding 0</span><br><span class="line">screen -t coding 1</span><br><span class="line">screen -t coding 2</span><br><span class="line">screen -t build_code 3</span><br><span class="line">screen -t execution 4</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Save the following as ~/.screenrc&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
        
      
    
    </summary>
    
    
      <category term="tooling" scheme="https://chihungtzeng.github.io/categories/tooling/"/>
    
    
      <category term="linux" scheme="https://chihungtzeng.github.io/tags/linux/"/>
    
      <category term="screen" scheme="https://chihungtzeng.github.io/tags/screen/"/>
    
  </entry>
  
  <entry>
    <title>Hexo setup</title>
    <link href="https://chihungtzeng.github.io/2019/06/02/hexo-setup/"/>
    <id>https://chihungtzeng.github.io/2019/06/02/hexo-setup/</id>
    <published>2019-06-02T01:17:41.000Z</published>
    <updated>2019-11-03T02:35:03.319Z</updated>
    
    <content type="html"><![CDATA[<p>This post is how I deploy hexo into github.io.</p><h3 id="Setup-hexo"><a href="#Setup-hexo" class="headerlink" title="Setup hexo"></a>Setup hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir hexo_root</span><br><span class="line">$ cd hexo_root</span><br><span class="line">$ npm install hexo-cli  # create ~/hexo_root/node_modules</span><br><span class="line">$ hexo -v</span><br><span class="line">...</span><br><span class="line">hexo: 4.0.0</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Linux 4.4.6-gentoo linux x64</span><br><span class="line">http_parser: 2.8.1</span><br><span class="line">node: 8.12.0</span><br><span class="line">v8: 6.2.414.66</span><br><span class="line">uv: 1.20.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.10.1-DEV</span><br><span class="line">modules: 57</span><br><span class="line">nghttp2: 1.33.0</span><br><span class="line">napi: 3</span><br><span class="line">openssl: 1.0.2q</span><br><span class="line">icu: 64.2</span><br><span class="line">unicode: 12.1</span><br><span class="line">cldr: 35.1</span><br><span class="line">tz: 2019a</span><br><span class="line"></span><br><span class="line">$ vi _config.yml</span><br><span class="line">  title: Clark&apos;s Mill</span><br><span class="line">  author: Clark</span><br><span class="line">  language: en</span><br><span class="line">  url: https://chihungtzeng.github.io</span><br><span class="line"></span><br><span class="line">$ export PATH=~/hexo_root/node_modules/hexo-cli/bin:$PATH</span><br><span class="line">$ hexo init blog  # create ~/hexo_root/blog</span><br><span class="line">$ cd ~/hexo_root/blog</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>Now open <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> to see the effect.</p><h3 id="Install-theme"><a href="#Install-theme" class="headerlink" title="Install theme"></a>Install theme</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/hexo_root/blog</span><br><span class="line">$ git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus</span><br><span class="line">$ vi _config.yml</span><br><span class="line">  theme: cactus</span><br><span class="line"></span><br><span class="line">$ cd ~/hexo_root/blog/themes/cactus</span><br><span class="line">$ vi _config.yml</span><br><span class="line">  colorscheme: light</span><br><span class="line"></span><br><span class="line">$ cd ~/hexo_root/blog</span><br><span class="line"></span><br><span class="line"># Create /about page</span><br><span class="line">$ hexo new page about</span><br><span class="line">$ vi source/about/index.md</span><br><span class="line"></span><br><span class="line"># Create /tags page</span><br><span class="line">$ hexo new page tags</span><br><span class="line">$ vi source/tags/index.md  # Add the following contents</span><br><span class="line">$ cat source/tags/index.md</span><br><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2019-11-02 17:59:17</span><br><span class="line">type: tags</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"># Create categories page</span><br><span class="line">$ hexo new page categories</span><br><span class="line">$ cat source/categories/index.md</span><br><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2019-11-02 23:46:38</span><br><span class="line">type: categories</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"># Put tags/categories pages on the navigation bar</span><br><span class="line">$ vi themes/cactus/_config.yml</span><br><span class="line">nav:</span><br><span class="line">  home: /</span><br><span class="line">  about: /about/</span><br><span class="line">  tags: /tags/</span><br><span class="line">  articles: /archives/</span><br></pre></td></tr></table></figure><h3 id="deploy-to-github"><a href="#deploy-to-github" class="headerlink" title="deploy to github"></a>deploy to github</h3><p>create a repo call chihungtzeng.github.io in github web site.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/hexo_root/blog</span><br><span class="line">$ vi _config.yml</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:chihungtzeng/chihungtzeng.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>Install hexo-deployer-git to enable <strong><em>hexo deploy</em></strong>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/hexo_root/blog  # Notice the path</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>Now open your browser, go to github web site, and register ssh keys: settings-&gt;SSH and PGP keys. From now on, we can simply run <code>hexo deploy</code> to deploy our repo to github.io.</p><h3 id="Add-Delete-a-page"><a href="#Add-Delete-a-page" class="headerlink" title="Add/Delete a page"></a>Add/Delete a page</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Add</span><br><span class="line">$ hexo new &quot;Hello World!&quot;</span><br><span class="line"></span><br><span class="line"># Delete the page associated with My-screenrc.md</span><br><span class="line">$ rm ~/hexo_root/blog/source/_posts/My-screenrc.md</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><h3 id="Add-images-to-a-post"><a href="#Add-images-to-a-post" class="headerlink" title="Add images to a post"></a>Add images to a post</h3><p>I use global asset folder to serve png/jpg/… files.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/hexo_root/blog</span><br><span class="line">$ mkdir -p source/images</span><br><span class="line">$ cp /tmp/hexo-setup.png source/images</span><br><span class="line">$ vi source/_posts/hexo-setup.md</span><br><span class="line"># Add the following in the appropriate position.</span><br><span class="line"></span><br><span class="line">![](/images/hexo-setup.png)</span><br></pre></td></tr></table></figure><p>Another option is to use <a href="https://hexo.io/docs/asset-folders.html" target="_blank" rel="noopener">post asset folder</a>.</p><h3 id="RSS-support"><a href="#RSS-support" class="headerlink" title="RSS support"></a>RSS support</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/hexo_root/blog</span><br><span class="line">$ npm install hexo-generator-feed  # for generate rss feeds</span><br><span class="line">$ vi _config.yml</span><br><span class="line">feed:</span><br><span class="line">    type: atom</span><br><span class="line">    path: atom.xml</span><br><span class="line">    limit: 20</span><br><span class="line">    hub:</span><br><span class="line">    content:</span><br><span class="line">    content_limit: 100</span><br><span class="line">    content_limit_delim: &apos; &apos;</span><br></pre></td></tr></table></figure><h3 id="Math-support"><a href="#Math-support" class="headerlink" title="Math support"></a>Math support</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/hexo_root/blog</span><br><span class="line">$ npm uninstall hexo-renderer-marked --save</span><br><span class="line">$ npm install hexo-renderer-kramed --save</span><br><span class="line">$ npm uninstall hexo-math --save</span><br><span class="line">$ npm install hexo-renderer-mathjax --save</span><br><span class="line">$ vi themes/cactus/_config.yml</span><br><span class="line">  mathjax:</span><br><span class="line">    enable: true</span><br><span class="line">$ vi node_modules/hexo-renderer-mathjax/mathjax.html</span><br><span class="line">change line 15 from</span><br><span class="line">  &lt;script src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;&lt;/script&gt;</span><br><span class="line">to</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>In the last step, the URL starts with https:// rather than http://. It is because we host github pages via https. If we use http:// to get the js file, modern browsers will issue a warning of blocked:mixed-content and refuse to download it.</p><p>Test math: $a = \sqrt{2} + 3$.</p><h3 id="Screenshot"><a href="#Screenshot" class="headerlink" title="Screenshot"></a>Screenshot</h3><p><img src="/images/hexo-setup.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;This post is how I deploy hexo into github.io.&lt;/p&gt;
&lt;h3 id=&quot;Setup-hexo&quot;&gt;&lt;a href=&quot;#Setup-hexo&quot;
        
      
    
    </summary>
    
    
      <category term="tooling" scheme="https://chihungtzeng.github.io/categories/tooling/"/>
    
    
      <category term="hexo" scheme="https://chihungtzeng.github.io/tags/hexo/"/>
    
      <category term="mathjax" scheme="https://chihungtzeng.github.io/tags/mathjax/"/>
    
  </entry>
  
</feed>
